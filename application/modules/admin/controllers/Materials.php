<?php/* * To change this license header, choose License Headers in Project Properties. * To change this template file, choose Tools | Templates * and open the template in the editor. *//** * Description of materials * * @author USER-PC05 */class materials extends Admin_Controller {    //put your code here    public function __construct() {        parent::__construct();        $this->load->model('mo_materials', 'data');    }    public function index() {        $this->mPageTitle = "จัดการวัตถุดิบ";        $this->mViewData['result'] = $this->data->get_all_data();        $this->render('materials/views');    }    public function server_side() {        header('Content-type:application/json;charset=utf-8');        $length = 5;        $result = array();//        $this->input->get('start'];//        $this->input->get('length'];//        $this->input->get('search']['value'];//        $this->input->get('order']['column'];//        $this->input->get('order']['dir']; //asc or desc        $result_data = $this->data->get_data_limit($this->input->get('length', TRUE), $this->input->get('start', TRUE), array($this->input->get('order', TRUE)[0]['column'], $this->input->get('order', TRUE)[0]['dir']), $this->input->get('search', TRUE)['value']);        $result_data_all = $this->data->get_data_no_limit(array($this->input->get('order', TRUE)[0]['column'], $this->input->get('order', TRUE)[0]['dir']), $this->input->get('search', TRUE)['value']);        foreach ($result_data as $key => $value) {            $data = array(                "<center>" . ($key + 1 + $this->input->get('start', TRUE)) . "</center>",                $value->material_code,                $value->material_trade_name,                $value->material_trade_name_2,                $value->material_supplier,                $value->material_edit_by,                '<center><a href="javascript:void(0)" class="fa ' . (($value->material_status == 1) ? "fa-eye" : "fa-eye-slash") . '" data-id="' . $value->id . '" data-status="' . $value->material_status . '" onclick="material_show(this);"></a>                <a href="javascript:void(0)" class="fa fa-edit" data-id="' . $value->id . '" onclick="material_edit(this);"></a>                <a href="javascript:void(0)" class="fa fa-trash" data-id="' . $value->id . '" onclick="material_trash(this);"></a>'                . '</center>'            );            array_push($result, $data);        }        $data = array(            "draw" => (int) $this->input->get('draw', TRUE),            "length" => $this->input->get('length', TRUE),            "recordsTotal" => count($result_data_all),            "recordsFiltered" => count($result_data_all),            "data" => $result,        );        echo json_encode($data);    }    public function check_material_code($material_code = null) {        $cks = $this->data->check_material_code($material_code);        if (!empty($cks)) {            $data_to = array(                'status' => true,            );        } else {            $data_to = array(                'status' => false,            );        }        echo json_encode($data_to);    }    public function create($event = null) {        switch ($event) {            case 'process':                $this->data->material_code = $this->input->post('material_code', TRUE);                $this->data->material_supplier = $this->input->post('material_supplier', TRUE);                $this->data->material_trade_name = $this->input->post('material_trade_name', TRUE);                $this->data->material_trade_name_2 = $this->input->post('material_trade_name_2', TRUE);                $this->data->role = $this->input->post('role', TRUE);                $this->data->create_by = $this->session->userdata('username');                $material_id = $this->data->inserts();                $material_inci_name = $this->input->post('material_inci_name', TRUE);                $material_cas = $this->input->post('material_cas', TRUE);                $material_function = $this->input->post('material_function', TRUE);                $material_quantity = $this->input->post('material_quantity', TRUE);                foreach ($material_inci_name as $key => $value) {                    $data = array(                        'ref_material_id' => $material_id,                        'material_inci_name' => $material_inci_name[$key],                        'material_cas' => $material_cas[$key],                        'material_function' => $material_function[$key],                        'material_quantity' => $material_quantity[$key],                    );                    $this->data->materials_details_insert($data);                }                redirect(site_url('admin/materials'));                break;            default:                $this->render('materials/add');                break;        }    }    public function edit($id, $event = null) {        switch ($event) {            case 'process'://                $material_id = $id;//                dd($this->input->post());//                exit(0);                $this->data->material_code = $this->input->post('material_code', TRUE);                $this->data->material_supplier = $this->input->post('material_supplier', TRUE);                $this->data->material_trade_name = $this->input->post('material_trade_name', TRUE);                $this->data->material_trade_name_2 = $this->input->post('material_trade_name_2', TRUE);                $this->data->role = $this->input->post('role', TRUE);                $this->data->edit_by = $this->session->userdata('username');                $this->data->updates($id);                $material_details_id = $this->input->post('material_details_id', TRUE);                $material_inci_name = $this->input->post('material_inci_name', TRUE);                $material_cas = $this->input->post('material_cas', TRUE);                $material_function = $this->input->post('material_function', TRUE);                $material_quantity = $this->input->post('material_quantity', TRUE);                foreach ($material_inci_name as $key => $value) {                    $data_details = array(                        'ref_material_id' => $id,                        'material_inci_name' => $material_inci_name[$key],                        'material_cas' => $material_cas[$key],                        'material_function' => $material_function[$key],                        'material_quantity' => $material_quantity[$key],                    );                    $this->data->update_materials_details($material_details_id[$key], $data_details);                }                redirect(site_url('admin/materials'));                break;            default:                $this->mViewData['id'] = $id;                $this->mViewData['result'] = $this->data->get($id);                $this->mViewData['result_details'] = $this->data->get_materials_details($id);                $this->render('materials/edit');                break;        }    }    public function onshow($id, $status) {        $data = array(            'material_status' => $status        );        $this->data->updates_array($data, $id);    }    public function remove($id) {        $this->data->deletes($id);    }}