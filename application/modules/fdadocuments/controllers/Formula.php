<?phpclass formula extends Admin_Controller {    public function __construct() {        parent::__construct();        $this->load->model('mo_formula', 'data');        $this->load->model('mo_materials', 'materials');    }    public function index() {        $this->mPageTitle = "จัดการสินค้า";        $this->mViewData['result'] = $this->data->get_all();        $this->render('formula/views');    }    public function server_side() {        header('Content-type:application/json;charset=utf-8');        $length = 5;        $result = array();//        dd($this->input->get());//        $_GET['start'];//        $_GET['length'];//        $_GET['search']['value'];//        $_GET['order']['column'];//        $_GET['order']['dir']; //asc or desc        $result_data = $this->data->get_data_limit($this->input->get('length', TRUE), $this->input->get('start', TRUE), array($this->input->get('order', true)[0]['column'], $this->input->get('order', TRUE)[0]['dir']), $this->input->get('search', TRUE)['value']);        $result_data_all = $this->data->get_data_no_limit(array($this->input->get('order', true)[0]['column'], $this->input->get('order', TRUE)[0]['dir']), $this->input->get('search', TRUE)['value']);        foreach ($result_data as $key => $value) {            $data[0] = "<center>" . ($key + 1 + $this->input->get('start', TRUE)) . "</center>";            $data[1] = $value->FDA_thai;            $data[2] = $value->FDA_english;            $data[3] = ($value->formula_status == 1) ? 'ส่งให้อย.' : 'กำลังคิดสูตร';            $data[4] = $value->formula_edit_by . "<br/>" . $value->formula_edit_date;            $data[5] = '<center>';            $data[5] .= ($value->formula_status == 0) ? '<a class="btn btn-app" href="./formula/edit/' . $value->id . '"><i class="fa fa-pencil-square-o" aria-hidden="true"></i>แก้ไขข้อมูล</a>' : "";            $data[5] .= '<a class="btn btn-app" href="./formula/tester/views/' . $value->id . '"><i class="fa fa-search" aria-hidden="true"></i>จัดการสูตร</a>';            $data[5] .= '<center>';            array_push($result, $data);        }        $data = array(            "draw" => (int) $this->input->get('draw', TRUE),            "length" => $this->input->get('length', TRUE),            "recordsTotal" => count($result_data_all),            "recordsFiltered" => count($result_data_all),            "data" => $result,        );        echo json_encode($data);    }    public function create($event = null) {        switch ($event) {            case 'process':                $this->data->FDA_thai = $this->input->post('FDA_thai', true);                $this->data->FDA_english = $this->input->post('FDA_english', true);                $this->data->product_type = $this->input->post('product_type', true);                $this->data->product_appearance = $this->input->post('product_appearance', true);                $this->data->formula_create_by = $this->session->userdata('username');                $this->data->inserts();                redirect(site_url('fdadocuments/formula'));                exit(0);                break;            default:                $this->mPageTitle = "เพิ่มสินค้า";                $this->render('formula/add');                break;        }    }    public function edit($id = null, $event = null) {        switch ($event) {            case 'process':                $data = array(                    'FDA_thai' => $this->input->post('FDA_thai'),                    'FDA_english' => $this->input->post('FDA_english'),                    'product_type' => $this->input->post('product_type'),                    'product_appearance' => $this->input->post('product_appearance'),                    'formula_edit_by' => $this->session->userdata('username'),                    'formula_edit_date' => date('y-m-d')                );                $this->data->updates_array($data, $id);                redirect(site_url('fdadocuments/formula'));                exit(0);                break;            default:                $this->mViewData['result'] = $this->data->get_by_id($id);                $this->mViewData['master_id'] = $id;                $this->mPageTitle = "แก้ไขสินค้า";                $this->render('formula/edit');                break;        }    }    public function tester($event = null, $id, $tester_id = null) {        $this->mViewData['result_master'] = $this->data->get_by_id($id);        switch ($event) {            case 'add':                $this->mPageTitle = "เพิ่มสูตร";                $this->mViewData['materials'] = $this->materials->get_all_data();                $this->mViewData['master_id'] = $id;                $this->render('formula/tester/add');                break;            case 'process':                //สูตรย่อย                 $formula_name = $this->input->post('formula_name');                $formula_remark = $this->input->post('formula_remark');                $this->data->ref_formula_id = $id;                $this->data->formula_name = $formula_name;                $this->data->formula_remark = $formula_remark;                $this->data->create_by = $this->session->userdata('username');                $formula_id = $this->data->insert_formula_details();                //////////////////////////////////////////////////////////////////////////////////////                //ส่วนผสม                $path_name = $this->input->post('path_name'); //array                //รายละเอียดส่วนผสม                $path_materials_code = $this->input->post('path_materials_code'); //array                $path_materials_quantity = $this->input->post('path_materials_quantity'); //array                //////////////////////////////////////////////////////////////////////////////////////                for ($i = 0; $i < count($path_name); $i++) {                    $this->data->ref_formula_details_id = $formula_id;                    $this->data->path_name = $path_name[$i];                    $ref_formula_path = $this->data->insert_formula_path();                    for ($j = 0; $j < count($path_materials_code[$i]); $j++) {                        $this->data->ref_formula_path = $ref_formula_path;                        $this->data->path_materials_code = $path_materials_code[$i][$j];                        $this->data->path_materials_quantity = $path_materials_quantity[$i][$j];                        $this->data->insert_formula_path_details();                    }                }                redirect(site_url('fdadocuments/formula/tester/views/' . $id));                break;            case 'edit':                $this->mPageTitle = "แก้ไขสูตร";                $this->mViewData['materials'] = $this->materials->get_all_data();                $this->mViewData['master_id'] = $id;                $this->mViewData['tester_id'] = $tester_id;                $this->mViewData['result'] = $this->data->get_formula_details_id($tester_id);                $this->load->model('Da_upload_files', 'upload_files');                $href = site_url("fdadocuments/formula/tester/edit/$id/$tester_id");                $this->mViewData['result_files'] = $this->upload_files->get_all_data_by_href($href);                $this->render('formula/tester/edit');                break;            case 'edit_process'://                dd($this->input->post());                $formula_name = $this->input->post('formula_name');                $formula_remark = $this->input->post('formula_remark');                $this->data->ref_formula_id = $id;                $this->data->formula_name = $formula_name;                $this->data->formula_remark = $formula_remark;                $this->data->create_by = $this->session->userdata('username');                $this->data->update_formula_details($tester_id);                //////////////////////////////////////////////////////////////////////////////////////                //ส่วนผสม                //////////////////////////////////////////////////////////////////////////////////////                $path_name_id = $this->input->post('path_name_id'); //array                $path_name = $this->input->post('path_name'); //array                //////////////////////////////////////////////////////////////////////////////////////                //รายละเอียดส่วนผสม                //////////////////////////////////////////////////////////////////////////////////////                $path_materials_code_id = $this->input->post('path_materials_code_id'); //array                $path_materials_code = $this->input->post('path_materials_code'); //array                $path_materials_quantity = $this->input->post('path_materials_quantity'); //array                ////////////////////////////////////////////////////////////////////////////////////////                exit(0);                for ($i = 0; $i < count($path_name); $i++) {                    $this->data->path_name = $path_name[$i];                    $ref_insert_path_id = null;                    if (!empty($path_name_id[$i])) {                        $ref_insert_path_id = $path_name_id[$i];                        $this->data->update_formula_path($ref_insert_path_id);                    } else {                        $this->data->ref_formula_details_id = $tester_id;                        $ref_insert_path_id = $this->data->insert_formula_path();                    }                    for ($j = 0; $j < count($path_materials_code[$i]); $j++) {                        $this->data->path_materials_code = $path_materials_code[$i][$j];                        $this->data->path_materials_quantity = $path_materials_quantity[$i][$j];                        if (!empty($path_materials_code_id[$i][$j])) {                            $this->data->update_formula_path_details($path_materials_code_id[$i][$j]);                        } else {                            $this->data->ref_formula_path = $ref_insert_path_id;                            $this->data->insert_formula_path_details();                        }                    }                }                redirect(site_url($this->mModule . "/formula/tester/editw/{$id}/{$tester_id}"));                break;            case "remove_path" :                $path_id = $this->input->post('path_id');                $this->data->remove_formula_path($path_id);                $csrf = array(                    'path_id' => $path_id,                    'name' => $this->security->get_csrf_token_name(),                    'hash' => $this->security->get_csrf_hash()                );                echo json_encode($csrf);                break;            case "remove_details"://                echo "null";                $this->data->remove_formula_path_details($id);                $csrf = array(                    'name' => $this->security->get_csrf_token_name(),                    'hash' => $this->security->get_csrf_hash()                );                echo json_encode($csrf);                exit(0);                break;            case 'trash':                $this->data->delete_formula_details($tester_id);                redirect(site_url('fdadocuments/formula/tester/views/' . $id));                exit(0);                break;            case 'selected':                $data = array(                    'formula_selected' => $tester_id                );                $this->data->updates_array($data, $id);                redirect(site_url('fdadocuments/formula/tester/views/' . $id));                exit(0);                break;            case 'sent_fda':                $data = array(                    'formula_status' => 1                );                $this->data->updates_array($data, $id);                redirect(site_url('fdadocuments/formula/tester/views/' . $id));                break;            case 'copy':                $result = $this->data->get_formula_details_id($tester_id);                $result_path = $this->data->get_formula_path_id($result->id);                //insert Step 1                $this->data->ref_formula_id = $result->ref_formula_id;                $this->data->formula_name = $result->formula_name . "(Copy)";                $this->data->formula_remark = $result->formula_remark;                $this->data->create_by = $this->session->userdata('username');                $formula_id = $this->data->insert_formula_details(); //Insert to DB                  foreach ($result_path as $key_path => $value_path) {                    $this->data->ref_formula_details_id = $formula_id;                    $this->data->path_name = $value_path->path_name;                    //insert Step 2                    $ref_formula_path = $this->data->insert_formula_path(); //Insert to DB                    $result_formula_path_details = $this->data->get_formula_path_details_id($value_path->id);                    foreach ($result_formula_path_details as $key_path_details => $value_path_details) {                        $this->data->ref_formula_path = $ref_formula_path;                        $this->data->path_materials_code = $value_path_details->path_materials_code;                        $this->data->path_materials_quantity = $value_path_details->path_materials_quantity;                        //insert Step 3                        $this->data->insert_formula_path_details();                    }                }                redirect(site_url('fdadocuments/formula/tester/views/' . $id));                break;            default:                $this->mPageTitle = "Master สูตร";                $this->mViewData['master_id'] = $id;                $this->mViewData['result'] = $this->data->get_formula_details_ref_id($id);                $this->render('formula/tester/views');                break;        }    }}